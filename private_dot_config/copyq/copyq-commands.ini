[Commands]
1\Command="copyq:\nvar snippetsTabName = 'Snippets'\n\nfunction newVarRe(content) {\n  return new RegExp('\\\\${' + content + '}', 'g')\n}\n\nfunction getText(item) {\n  var textData = item['text/plain']\n  return textData ? str(textData) : ''\n}\n\nfunction assignPlaceholder(snippet, placeholder, value) {\n  return snippet.replace(newVarRe(placeholder), value)\n}\n\nfunction fuzzyIndexOf(snippetNames, snippetName) {\n    var re = new RegExp(snippetName, 'i')\n    for (var i in snippetNames) {\n      if (snippetNames[i].match(re))\n        return i;\n    }\n    return -1\n}\n\nfunction loadSnippets(snippetNames, snippets)\n{\n  var tabs = tab()\n  for (var i in tabs) {\n    var tabName = tabs[i];\n    if (tabName != snippetsTabName && tabName.indexOf(snippetsTabName + '/') != 0)\n      continue;\n\n    tab(tabName)\n    var prefix = tabName.substring(snippetsTabName.length + 1)\n    for (var j = 0; j < size(); ++j) {\n      var snippet = getitem(j)\n      var snippetName = str(snippet['application/x-copyq-item-notes']) || getText(snippet)\n      if (prefix.length != 0)\n        snippetName = prefix + ': ' + snippetName\n      snippetNames.push(snippetName)\n      snippets.push(snippet)\n    }\n  }\n}\n\nfunction askForSnippetName(snippetNames) {\n  return str(dialog(\n    '.title', 'Snippets',\n    'Snippet', [snippetNames[0]].concat(snippetNames)\n  ) || abort())\n}\n\nfunction askForSnippet(snippetNames, snippets) {\n  var snippetName = askForSnippetName(snippetNames)\n  var i = snippetNames.indexOf(snippetName)\n  if (i == -1) {\n    i = fuzzyIndexOf(snippetNames, snippetName)\n    if (i == -1) {\n      popup(\n        'Snippet Not Found',\n        'No matching snippet found for \"' + snippetName + '\"!'\n      )\n      abort()\n    }\n  }\n\n  return snippets[i]\n}\n\nfunction getPlaceholders(snippet) {\n  var placeholders = []\n  var m\n  var reVar = newVarRe('(.*?)')\n  while ((m = reVar.exec(snippet)) !== null) {\n    if (placeholders.indexOf(m[1]) === -1)\n      placeholders.push(m[1])\n  }\n\n  return placeholders\n}\n\nfunction askToAssignPlaceholders(snippet) {\n  var placeholders = getPlaceholders(snippet)\n\n  if (placeholders.length > 0) {\n    var dialogVars = [\n      '.title', 'Snippet Values for \"' + snippet + '\"']\n\n    for (var i in placeholders) {\n      dialogVars.push(placeholders[i])\n      dialogVars.push(\"\")\n    }\n\n    var values = dialog.apply(this, dialogVars) || abort()\n\n    if (placeholders.length > 1) {\n      for (var i in placeholders)\n        snippet = assignPlaceholder(snippet, placeholders[i], values[placeholders[i]])\n    } else {\n      snippet = assignPlaceholder(snippet, placeholders[0], values)\n    }\n  }\n\n  return snippet\n}\n\nfunction pasteSnippet(mime, content) {\n  copy(mime, content)\n  copySelection(mime, content)\n  paste()\n}\n\nvar snippetNames = []\nvar snippets = []\nloadSnippets(snippetNames, snippets)\n\nvar snippet = askForSnippet(snippetNames, snippets)\n\nvar textSnippet = getText(snippet)\nif (textSnippet)\n  pasteSnippet('text/plain', askToAssignPlaceholders(textSnippet))\nelse\n  pasteSnippet('application/x-copyq-item', pack(snippet))"
1\GlobalShortcut=meta+ctrl+shift+v
1\Icon=\xf1fb
1\IsGlobalShortcut=true
1\Name=Snippets
10\Command=copyq: showAt()
10\Icon=\xf022
10\IsGlobalShortcut=true
10\Name=Show main window under mouse cursor
11\Command="copyq:\nvar text = input()\ncopy(text)\ncopySelection(text)\npaste()"
11\HideWindow=true
11\Icon=\xf0ea
11\InMenu=true
11\Input=text/plain
11\Name=Paste as Plain Text
11\Shortcut=alt+v
12\Command=copyq: disable()
12\GlobalShortcut=meta+alt+v
12\Icon=\xf070
12\IsGlobalShortcut=true
12\Name=Disable clipboard storing
13\Command=copyq: enable()
13\GlobalShortcut=meta+alt+shift+v
13\Icon=\xf06e
13\IsGlobalShortcut=true
13\Name=Enable clipboard storing
2\Command=copyq: plugins.itempinned.pin()
2\Icon=\xf08d
2\InMenu=true
2\Input=!OUTPUT
2\Name=Pin
2\Output=application/x-copyq-item-pinned
3\Command=copyq: plugins.itempinned.unpin()
3\Icon=\xf08d
3\InMenu=true
3\Input=application/x-copyq-item-pinned
3\Name=Unpin
4\Command=copyq: plugins.itemtags.tag(decodeURIComponent('Important'))
4\Icon=\xf02b
4\InMenu=true
4\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) && fail()
4\Name=Tag as \x201cImportant\x201d
5\Command=copyq: plugins.itemtags.untag(decodeURIComponent('Important'))
5\Icon=\xf02b
5\InMenu=true
5\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) || fail()
5\Name=Remove tag \x201cImportant\x201d
6\Command=copyq: plugins.itemtags.tag()
6\Icon=\xf02b
6\InMenu=true
6\Name=Add a Tag
7\Command=copyq: plugins.itemtags.untag()
7\Icon=\xf02b
7\InMenu=true
7\Input=application/x-copyq-tags
7\Name=Remove a Tag
8\Command=copyq: plugins.itemtags.clearTags()
8\Icon=\xf02b
8\InMenu=true
8\Input=application/x-copyq-tags
8\Name=Clear all tags
9\Command=copyq: toggle()
9\GlobalShortcut=alt+f12
9\Icon=\xf022
9\IsGlobalShortcut=true
9\Name=Show/hide main window
size=13
