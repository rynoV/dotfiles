# -*- mode: fish; aggressive-indent-mode: nil -*-
{{ if eq .chezmoi.os "darwin" }}
eval "$(/opt/homebrew/bin/brew shellenv)"
{{ else if eq .chezmoi.os "linux" }}
{{   if and (.chezmoi.kernel.osrelease | lower | contains "microsoft") (eq .chezmoi.osRelease.id "arch") }}
# On wsl arch linux, the following is required for graphical applications to work via WSLg
# See https://wiki.archlinux.org/title/Install_Arch_Linux_on_WSL#Run_graphical_applications_with_WSLg
# It seems like these lines are no longer necessary, but if graphical apps start breaking try uncommenting, or go back to the above webpage and check for updates
# ln -sf /mnt/wslg/.X11-unix/* /tmp/.X11-unix/
# ln -sf /mnt/wslg/runtime-dir/wayland-0* /run/user/(id -u)/
# Cursor on wslg applications is scaled weirdly
# https://github.com/microsoft/wslg/issues/61#issuecomment-1738093482
gsettings set org.gnome.desktop.interface cursor-size 8

# set ssh_setup (/usr/sbin/wsl2-ssh-agent)
# eval $ssh_setup
set --export SSH_AUTH_SOCK $XDG_RUNTIME_DIR/ssh-agent.socket
{{   else  }}
# From
# https://wiki.archlinux.org/title/SSH_keys#Start_ssh-agent_with_systemd_user
# so that ~/.config/systemd/user/ssh-agent.service works
set --export SSH_AUTH_SOCK $XDG_RUNTIME_DIR/ssh-agent.socket
{{   end }}
{{ end }}

fish_vi_key_bindings

# Ctrl+Alt+g to grep
bind --mode insert ctrl-alt-g rga-fzf

bind --mode insert alt-o ranger-cd

bind --mode insert ctrl-k history-search-backward
bind --mode normal ctrl-k history-search-backward
bind --mode insert ctrl-j history-search-forward
bind --mode normal ctrl-j history-search-forward
bind --mode insert pageup history-search-backward
bind --mode normal pageup history-search-backward
bind --mode insert pagedown history-search-forward
bind --mode normal pagedown history-search-forward

# Prepend sudo to the current or previous command
bind --mode insert alt-s 'fish_commandline_prepend sudo'
# Pipe the output of the current or previous command to a temporary file, printing its name
bind --mode insert alt-t 'fish_commandline_append \' > (set tmpout (mktemp); printf $tmpout) ; echo $tmpout\''

bind --mode insert ctrl-y accept-autosuggestion execute

# XDG folders: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
set --export XDG_CONFIG_HOME $HOME/.config
set --export XDG_CACHE_HOME $HOME/.cache
set --export XDG_DATA_HOME $HOME/.local/share
set --export XDG_STATE_HOME $HOME/.local/state

fish_add_path --path ~/.local/bin
fish_add_path --path ~/.local/bin/evil-software

fish_add_path --path ~/.local/share/JetBrains/Toolbox/scripts
fish_add_path --path ~/.duckdb/cli/latest

set --export VISUAL nvim
set --export EDITOR nvim
set --export BROWSER browser
set MANPATH $MANPATH /usr/share/man

set --export FZF_DEFAULT_OPTS "--cycle --layout=reverse --border=block --height=90% --preview-window=wrap --marker='*' \
--color=spinner:#8FBCBB,hl:#898f9e,fg:#D8DEE9,header:#898f9e,info:#8FBCBB \
--color=pointer:#8FBCBB,marker:#8FBCBB,fg+:#8FBCBB,prompt:#8FBCBB,hl+:#7d9761,border:#81A1C1,label:#2b3740 \
--bind='ctrl-alt-y:execute-silent(echo {+} | xclip -selection clipboard -rmlastnl)'
"

# Use ctrl-e in the fzf file finder to edit the file(s), ctrl-alt-e to edit in
# vscode, copy absolute paths with ctrl-alt-y
set --export MY_FZF_FILE_OPTS --bind "\
ctrl-e:execute(myemacs {+} &> /dev/tty)+abort,\
ctrl-alt-e:execute(code {+})+abort,\
ctrl-alt-y:execute-silent(echo {+} | xargs readlink -f | xclip -selection clipboard -rmlastnl)"

set fzf_dir_opts $MY_FZF_FILE_OPTS
set fzf_fd_opts --hidden --exclude=.git --follow
set fzf_preview_file_cmd fzf_preview_file

set --export JAVA_HOME /usr/lib/jvm/java-11-openjdk
fish_add_path --path $JAVA_HOME/bin

fish_add_path --path /usr/local/go/bin
set --export GOPATH ~/.var/go

set --export TEXMFHOME ~/.local/share/texmf
set --export TEXMFVAR ~/.var/texmf
set --export TEXMFCONFIG ~/.config/texmf

# For GTK 4 apps
set --export GTK_THEME Nordic

alias me myemacs

alias g magit

alias c code

alias x xdg-open

alias ls lsd
alias la "ls -A"
alias ll "ls -l"
alias lla "ls -lA"

alias cm chezmoi
alias dn dotnet

# Useful abbreviations from https://github.com/fish-shell/fish-shell/releases/tag/3.6.0
function multicd
    echo cd (string repeat -n (math (string length -- $argv[1]) - 1) ../)
end

abbr --add dotdot --regex '^\.\.+$' --function multicd

function last_history_item; echo $history[1]; end
abbr -a !! --position anywhere --function last_history_item

if type -q pacman
    alias pm pacman
    # Browse remote packages
    alias pml "pacman -Slq | fzf --preview 'pacman -Si {}' --layout=reverse"
    # Browse installed packages
    alias pmq "pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse"
    # Browse groups
    alias pmg "pacman -Sgq | fzf --preview 'pacman -Sgq {}' --layout=reverse"
    # Browse packages in a group passed as the argument
    alias pmgl "pacman_browse_group"
    # Update system with interesting packages highlighted
    alias pmi "pacman_install"
end

test "$TERM" = "xterm-kitty" && alias ssh "kitty +kitten ssh"

set --export GHCUP_USE_XDG_DIRS
fish_add_path --path $XDG_DATA_HOME/cabal/bin $XDG_DATA_HOME/ghcup/bin # ghcup-env

fish_add_path --path $HOME/.nix-profile/bin /nix/var/nix/profiles/default/bin

fish_add_path --path /opt/flutter/bin
fish_add_path --path $HOME/Android/Sdk/cmdline-tools/latest/bin

fish_add_path --path $HOME/.dotnet/tools
set --export DOTNET_ROOT $HOME/.dotnet/
fish_add_path --path $DOTNET_ROOT

# Rust
set --export RUSTUP_HOME $XDG_DATA_HOME/.rustup
set --export CARGO_HOME $XDG_DATA_HOME/.cargo
fish_add_path --path $XDG_DATA_HOME/.cargo/bin

set MANPATH $HOME/.nix-profile/share/man /nix/var/nix/profiles/default/share/man $MANPATH

if type -q any-nix-shell
    any-nix-shell fish --info-right | source
end

if type -q direnv
    direnv hook fish | source
end

set --export GNUPGHOME $XDG_DATA_HOME/gnupg
# https://stackoverflow.com/a/55032706
set --export GPG_TTY (tty)

set --export CABAL_DIR $XDG_DATA_HOME/cabal

set --export NVM_DIR $XDG_DATA_HOME/nvm
set --export nvm_prefix /usr/share/nvm

set --export LESSHISTFILE $XDG_STATE_HOME/lesshst

# For "pass" password manager
set --export PASSWORD_STORE_DIR ~/.var/password-store

set --export LANG "en_CA.UTF-8"
set --export LC_ALL "en_CA.UTF-8"

# Nix gives trouble about locales if I don't have this set https://nixos.wiki/wiki/Locales
set --export LOCALE_ARCHIVE /usr/lib/locale/locale-archive

# Clean up duplicates in the path, from https://unix.stackexchange.com/a/14896
set PATH (printf "%s" "$PATH" | awk -v RS=':' '!a[$1]++ { if (NR > 1) printf RS; printf $1 }')

set --export _ZO_ECHO 1

zoxide init fish | source

# https://starship.rs/advanced-config/#transientprompt-and-transientrightprompt-in-fish
function starship_transient_prompt_func
    starship module directory
    starship module character
end

function starship_transient_rprompt_func
    starship module time
end

starship init fish | source

enable_transience

# Start X at login
if status is-login
    if test -z "$DISPLAY" -a "$XDG_VTNR" = 1
        exec startx -- -keeptty >~/.var/xorg.log 2>&1
    end
end
